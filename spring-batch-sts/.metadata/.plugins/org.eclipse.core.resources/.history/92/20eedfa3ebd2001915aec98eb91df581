package com.batch.reader;

import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;
import org.springframework.batch.item.ItemReader;
import org.springframework.batch.item.NonTransientResourceException;
import org.springframework.batch.item.ParseException;
import org.springframework.batch.item.UnexpectedInputException;
import org.springframework.batch.item.file.FlatFileItemReader;
import org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;
import org.springframework.batch.item.file.mapping.DefaultLineMapper;
import org.springframework.batch.item.file.transform.DelimitedLineTokenizer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.ClassPathResource;

import com.batch.model.Product;

@Configuration
@EnableBatchProcessing
public class ProductReader implements ItemReader<Product> {
	
	@Bean
	public FlatFileItemReader<Product> reader()
	{
		 FlatFileItemReader<Product> reader=new   FlatFileItemReader<Product>();
		 reader.setResource(new ClassPathResource("product.csv"));
		 reader.setLineMapper(new DefaultLineMapper<Product>() {{
				setLineTokenizer(new DelimitedLineTokenizer()
						{{
							setNames(new String[] {"id","name","email","salary"});
							
						}});
				setFieldSetMapper(new BeanWrapperFieldSetMapper<Product>() {{
					setTargetType(Product.class);
				}});
			}});
		
		return reader;
	}

	@Override
	public Product read() throws Exception, UnexpectedInputException, ParseException, NonTransientResourceException {
		// TODO Auto-generated method stub
		return null;
	}

}
